#
msgid ""
msgstr ""
"Project-Id-Version: ASP.NET 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-12 14:35-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\security\data-protection\using-data-protection.rst:2
msgid "Getting Started with the Data Protection APIs"
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:4
msgid "At its simplest protecting data is consists of the following steps:"
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:6
msgid "Create a data protector from a data protection provider."
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:7
msgid "Call the Protect method with the data you want to protect."
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:8
msgid ""
"Call the Unprotect method with the data you want to turn back into plain "
"text."
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:10
msgid ""
"Most frameworks such as ASP.NET or SignalR already configure the data "
"protection system and add it to a service container you access via "
"dependency injection. The following sample demonstrates configuring a "
"service container for dependency injection and registering the data "
"protection stack, receiving the data protection provider via DI, creating a "
"protector and protecting then unprotecting data"
msgstr ""

#: ..\..\security\data-protection\using-data-protection.rst:17
msgid ""
"When you create a protector you must provide one or more :doc:`consumer-apis"
"/purpose-strings`. A purpose string provides isolation between consumers, "
"for example a protector created with a purpose string of \"green\" would not"
" be able to unprotect data provided by a protector with a purpose of "
"\"purple\"."
msgstr ""

#: ..\..\security\data-protection\thread-safety-included.txt:2
msgid ""
"Instances of IDataProtectionProvider and IDataProtector are thread-safe for "
"multiple callers. It is intended that once a component gets a reference to "
"an IDataProtector via a call to CreateProtector, it will use that reference "
"for multiple calls to Protect and Unprotect."
msgstr ""

#: ..\..\security\data-protection\thread-safety-included.txt:4
msgid ""
"A call to Unprotect will throw CryptographicException if the protected "
"payload cannot be verified or deciphered. Some components may wish to ignore"
" errors during unprotect operations; a component which reads authentication "
"cookies might handle this error and treat the request as if it had no cookie"
" at all rather than fail the request outright. Components which want this "
"behavior should specifically catch CryptographicException instead of "
"swallowing all exceptions."
msgstr ""
